diff --git a/dist/module.mjs b/dist/module.mjs
index 5b578b702df35303ee68de0347ef195da6530421..d4913ebed249ab0688b8b17220df111745ba2696 100644
--- a/dist/module.mjs
+++ b/dist/module.mjs
@@ -20,8 +20,7 @@ const module = defineNuxtModule({
     version,
     configKey: CONFIG_KEY,
     compatibility: {
-      nuxt: "^3.7.0",
-      bridge: true
+      nuxt: ">=3.7.0",
     }
   },
   defaults: {
@@ -139,7 +138,7 @@ const module = defineNuxtModule({
       { name: "groq", from: join(runtimeDir, "groq") },
       { name: "useSanity", from: composablesFile },
       { name: "useLazySanityQuery", from: join(runtimeDir, "composables/index") },
-      ...isNuxtMajorVersion(3) ? [{ name: "useSanityQuery", from: composablesFile }] : []
+      { name: "useSanityQuery", from: composablesFile },
     ]);
     const clientPath = await resolvePath(clientSpecifier);
     nuxt.hook("prepare:types", async ({ tsConfig }) => {
@@ -203,14 +202,12 @@ const module = defineNuxtModule({
           "@sanity/client"
         ]
       });
-      if (isNuxtMajorVersion(3)) {
         addImports([
           { name: "useSanityLiveMode", from: composablesFile },
           { name: "useSanityVisualEditing", from: composablesFile },
           { name: "useSanityVisualEditingState", from: composablesFile },
           { name: "createDataAttribute", from: "@sanity/visual-editing", as: "createSanityDataAttribute" }
         ]);
-      }
       addPlugin({
         mode: "server",
         src: join(runtimeDir, "plugins", "visual-editing.server")
diff --git a/dist/runtime/composables/index.d.ts b/dist/runtime/composables/index.d.ts
index 5df4c55aa4cebfc1dbbfd0aa81c4f231526c9720..31b028df039c98d41a5bf2aea30b8a3f6d4a9e77 100644
--- a/dist/runtime/composables/index.d.ts
+++ b/dist/runtime/composables/index.d.ts
@@ -1,4 +1,5 @@
 import type { AsyncData, AsyncDataOptions } from 'nuxt/app';
+import type { H3Event } from 'h3';
 import type { SanityClient, ClientConfig } from '../client.js';
 export interface SanityHelper {
     client: SanityClient;
@@ -6,7 +7,8 @@ export interface SanityHelper {
     fetch: SanityClient['fetch'];
     setToken: (token: string) => void;
 }
-export declare const useSanity: (client?: string) => SanityHelper;
+export declare function useSanity (event?: H3Event, client?: string): SanityHelper;
+export declare function useSanity (client?: string): SanityHelper;
 interface UseSanityQueryOptions<T> extends AsyncDataOptions<T> {
     client?: string;
 }
