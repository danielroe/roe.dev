diff --git a/dist/app/components/nuxt-island.js b/dist/app/components/nuxt-island.js
index ee357c3e35f18f2bf6f5ae11eb5f49e8c6a6acdd..16772783e5f02347dd78dd29451a84fab8b9b121 100644
--- a/dist/app/components/nuxt-island.js
+++ b/dist/app/components/nuxt-island.js
@@ -96,9 +96,9 @@ export default defineComponent({
       if (nuxtApp.payload.data[key2] && !force) {
         return nuxtApp.payload.data[key2];
       }
-      const url = remoteComponentIslands && props.source ? new URL(`/__nuxt_island/${key2}`, props.source).href : `/__nuxt_island/${key2}`;
+      const url = remoteComponentIslands && props.source ? new URL(`/__nuxt_island/${key2}.json`, props.source).href : `/__nuxt_island/${key2}.json`;
       if (import.meta.server && import.meta.prerender) {
-        appendResponseHeader(event, "x-nitro-prerender", url);
+        nuxtApp.runWithContext(() => prerenderRoutes(url));
       }
       const r = await eventFetch(withQuery(import.meta.dev && import.meta.client || props.source ? url : joinURL(config.app.baseURL ?? "", url), {
         ...props.context,
@@ -108,7 +108,7 @@ export default defineComponent({
       if (import.meta.server && import.meta.prerender) {
         const hints = r.headers.get("x-nitro-prerender");
         if (hints) {
-          prerenderRoutes(hints);
+          appendResponseHeader(event, 'x-nitro-prerender', hints);
         }
       }
       setPayload(key2, result);
diff --git a/dist/app/plugins/revive-payload.client.js b/dist/app/plugins/revive-payload.client.js
index e8035eae558255a048a3f4c4f16d406938795021..d48a70c24bafbf4c45fabc7cd4486f3e95e5678b 100644
--- a/dist/app/plugins/revive-payload.client.js
+++ b/dist/app/plugins/revive-payload.client.js
@@ -17,7 +17,7 @@ if (componentIslands) {
   revivers.Island = ({ key, params }) => {
     const nuxtApp = useNuxtApp();
     if (!nuxtApp.isHydrating) {
-      nuxtApp.payload.data[key] = nuxtApp.payload.data[key] || $fetch(`/__nuxt_island/${key}`, {
+      nuxtApp.payload.data[key] = nuxtApp.payload.data[key] || $fetch(`/__nuxt_island/${key}.json`, {
         responseType: "json",
         ...params ? { params } : {}
       }).then((r) => {
diff --git a/dist/core/runtime/nitro/renderer.js b/dist/core/runtime/nitro/renderer.js
index 030392d34d9de0492db8ed41f4d73e0b451bdd0c..629b61d22e7be6298712d5b368c2d7c1d4669328 100644
--- a/dist/core/runtime/nitro/renderer.js
+++ b/dist/core/runtime/nitro/renderer.js
@@ -98,7 +98,7 @@ async function getIslandContext(event) {
     url = await islandPropCache.getItem(event.path);
   }
   url = url.substring("/__nuxt_island".length + 1) || "";
-  const [componentName, hashId] = url.split("?")[0].split("_");
+  const [componentName, hashId] = url.split("?")[0].replace(/\.json$/, '').split("_");
   const context = event.method === "GET" ? getQuery(event) : await readBody(event);
   const ctx = {
     url: "/",
@@ -285,8 +285,8 @@ export default defineRenderHandler(async (event) => {
       }
     };
     if (import.meta.prerender) {
-      await islandCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}`, response2);
-      await islandPropCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}`, event.path);
+      await islandCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}.json`, response2);
+      await islandPropCache.setItem(`/__nuxt_island/${islandContext.name}_${islandContext.id}.json`, event.path);
     }
     return response2;
   }
